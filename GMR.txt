


expr: KEY:let ID EQ expr
    : comp-expr ((KEY:AND|OR) comp-expr)*

comp-expr: NOT comp-expr
         : arith-expr ((EE|LT|GT|LE|GE|NE) arith-expr)*

arith-expr: term ((PLUS|MINUS)term)*

term: factor ((MUL|DIV|MOD) factor)*

factor: (PLUS|MINUS) factor
      : power

power: atom (POW factor)*

atom: LPAREN expr RPAREN
    : INT|FLOAT|ID
    : if-expr
    : for-expr
    : while-expr

if-expr: KEY:if expr KEY:then expr
       : (KEY:elif expr KEY:then expr)*
       : (KEY:else expr)?

for-expr: KEY:for ID EQ expr KEY:to expr
          (KEY:step expr)? KEY:then expr

while-expr: KEY:while expr KEY:then expr